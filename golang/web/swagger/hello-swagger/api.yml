# design below two endpoints 
## [POST] /customer : to create a customer record
## [GET] /customer : to query the customers using the email (string), status (ACTIVE, DELETED, INACTIVE)
---
#Metadata - the overall structure of API specification
swagger: '2.0'
info:
  version: 0.0.1
  title: API-Customers
  description: Customers data

#Base url
host: localhost:8080
basePath: /
schemes: 
 - https

#MIME types - the root level definitions can be overridden in individual operations
consumes: 
 - application/json
produces: 
 - application/json

#Input and Output Models
definitions:
  customer:
   properties:
     id:
      type: integer
     name:
      type: string
     email:
      type: string
      format: email
      pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+\.com$'
     status:
      type: string
      enum: [Active,Deleted,Inactive]
   #properties required
   required: [id,name,email,status]

#Paths - define individual end points
paths:
  /customer:
   post:
     summary: Post new customer.
     parameters:
      - in: body
        name: customer
        required: true
        schema:
         $ref: '#/definitions/customer'
        description: id of the new customer
     description: Creates a new customer
     responses:
       201:
         description: New customer created
       406:
        description: Not Acceptable
       500:
        description: Internal Server Error
  #/customer/{email}:
   get:
      summary: get customer email status
      parameters:
        - in: query
          name: email
          type: string
          pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+\.com$'
      responses:
        200:
          description: OK
        302:
          description: Found
          schema:
            $ref: '#/definitions/customer'
        404:
          description: Not Found
        500:
          description: Internal Server Error
