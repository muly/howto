# design below two endpoints 
## [POST] /customer : to create a customer record
## [GET] /customer : to query the customers using the email (string), status (ACTIVE, DELETED, INACTIVE)
---
#Metadata - the overall structure of API specification
swagger: '2.0'
info:
  version: 0.0.1
  title: API-Customers
  description: Customers data

#Base url
host: localhost:8080
basePath: /
schemes: 
 - https

#MIME types - the root level definitions can be overridden in individual operations
consumes: 
 - application/json
produces: 
 - application/json

#Input and Output Models
definitions:
  customer:
   properties:
     id:
      type: integer
     name:
      type: string
     email:
      type: string
      format: email
      pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+\.com$'
     status:
      type: string
      enum: [Active,Deleted,Inactive]
   #properties required
   required: [id,name,email,status]

#Paths - define individual end points
paths:
  /customer:
    post:
      tags:
        - postCustomer
      operationId: postCustomer
      parameters:
        - name: customer
          in: body
          description: customer to be created
          schema:
            $ref: '#/definitions/customer'
      responses:
        201:
         description: Customer created
        500:
          description: Internal Server Error
  /customer/{email}:
    get:
      tags:
        - getCustomer
      operationId: getCustomer 
      parameters: 
      - name: email
        in: path
        type: string
        format: email
        pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+\.com$'
        description: email of the customer
        required: true
      description: customer to be found
      responses:
        200:
          description: Customer found
        404:
          description: Customer not found
