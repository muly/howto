// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Customers data",
    "title": "API-Customers",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/customer": {
      "post": {
        "tags": [
          "postCustomer"
        ],
        "operationId": "postCustomer",
        "parameters": [
          {
            "description": "customer to be created",
            "name": "customer",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Customer created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/customer/{email}": {
      "get": {
        "description": "customer to be found",
        "tags": [
          "getCustomer"
        ],
        "operationId": "getCustomer",
        "parameters": [
          {
            "pattern": "[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$",
            "type": "string",
            "format": "email",
            "description": "email of the customer",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Customer found"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    }
  },
  "definitions": {
    "customer": {
      "required": [
        "id",
        "name",
        "email",
        "status"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "pattern": "[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Deleted",
            "Inactive"
          ]
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Customers data",
    "title": "API-Customers",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/customer": {
      "post": {
        "tags": [
          "postCustomer"
        ],
        "operationId": "postCustomer",
        "parameters": [
          {
            "description": "customer to be created",
            "name": "customer",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Customer created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/customer/{email}": {
      "get": {
        "description": "customer to be found",
        "tags": [
          "getCustomer"
        ],
        "operationId": "getCustomer",
        "parameters": [
          {
            "pattern": "[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$",
            "type": "string",
            "format": "email",
            "description": "email of the customer",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Customer found"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    }
  },
  "definitions": {
    "customer": {
      "required": [
        "id",
        "name",
        "email",
        "status"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "pattern": "[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Deleted",
            "Inactive"
          ]
        }
      }
    }
  }
}`))
}
